<group
        rotation={[-Math.PI / 2, 0, Math.PI]}
        position={[0, 3, 0]}
        scale={0.003}
      >
        <mesh>
          <Html
            scale={100}
            rotation={[Math.PI / 2, 0, 0]}
            position={[0, 0, 0]}
            transform
            occlude
          >
            <div className="rounded-2xl bg-black/50 p-10 text-white shadow-2xl backdrop-blur-2xl select-none">
              <h1 className="animate-fade-in mb-6 text-5xl font-extrabold tracking-wide text-cyan-400 drop-shadow-lg">
                Bienvenue sur mon TriDfolio !
              </h1>
              <h3 className="animate-slide-in mb-4 text-sm font-medium tracking-wide text-cyan-300 opacity-80 drop-shadow-md">
                Qui a dit que les portfolios interactifs ne pouvaient pas être
                en 3D ?
              </h3>
              <p className="animate-fade-in mb-6 text-lg text-cyan-200 opacity-90 delay-200">
                Explorez mon univers futuriste et découvrez mes projets
                immersifs.
              </p>
              <div className="flex space-x-4">
                <button
                  onClick={() => (window.location.href = "/projects")}
                  className="transform rounded-lg bg-gradient-to-r from-cyan-500 to-blue-600 px-6 py-3 font-semibold text-white shadow-lg transition-all duration-300 ease-in-out hover:scale-105 hover:from-blue-600 hover:to-cyan-500"
                >
                  Explorez
                </button>
                <button
                  onClick={() => (window.location.href = "/contact")}
                  className="transform rounded-lg bg-gray-900 px-6 py-3 font-semibold text-white shadow-md transition-all duration-300 ease-in-out hover:scale-105 hover:bg-gray-700"
                >
                  Contactez-moi
                </button>
              </div>
            </div>
          </Html>
        </mesh>
        <mesh castShadow receiveShadow />
      </group>
      
      <group
  rotation={[-Math.PI / 2, 0, Math.PI]}
  position={[-3, 3, 0]}
  scale={0.003}
>
  <mesh>
    <Html
      scale={100}
      rotation={[Math.PI / 2, 0, 0]}
      position={[0, 0, 0]}
      transform
      occlude
    >
      <div className="rounded-xl bg-gradient-to-r from-yellow-400 via-red-500 to-purple-600 p-8 text-white shadow-2xl backdrop-blur-2xl select-none">
        <h1 className="animate-fade-in mb-6 text-4xl font-bold text-white drop-shadow-xl">
          Installation interactive : "Lumières du futur"
        </h1>
        <p className="animate-fade-in mb-6 text-md opacity-90">
          Une expérience immersive où l’art rencontre la technologie. Explorez une installation lumineuse interactive.
        </p>
        <div className="flex justify-between mt-4">
          <button
            onClick={() => (window.location.href = "/projects/light-future")}
            className="transform rounded-lg bg-yellow-600 px-6 py-3 font-semibold text-white shadow-lg transition-all duration-300 ease-in-out hover:scale-105"
          >
            Explorer
          </button>
          <button
            onClick={() => (window.location.href = "/contact")}
            className="transform rounded-lg bg-gray-800 px-6 py-3 font-semibold text-white shadow-md transition-all duration-300 ease-in-out hover:scale-105"
          >
            Contactez-moi
          </button>
        </div>
      </div>
    </Html>
  </mesh>
  <mesh castShadow receiveShadow />
</group>

<group
  rotation={[-Math.PI / 2, 0, Math.PI]}
  position={[0, 4, 0]}
  scale={0.003}
>
  <mesh>
    <Html
      scale={100}
      rotation={[Math.PI / 2, 0, 0]}
      position={[0, 0, 0]}
      transform
      occlude
    >
      <div className="overflow-hidden rounded-2xl bg-black/50 p-6 text-white shadow-2xl backdrop-blur-2xl">
        <h2 className="animate-fade-in mb-4 text-3xl font-bold text-cyan-400">Mes Projets</h2>
        <table className="min-w-full">
          <thead>
            <tr>
              <th className="text-left p-3">Nom du Projet</th>
              <th className="text-left p-3">Date de création</th>
              <th className="text-left p-3">Description</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td className="p-3">Portfolio Interactif</td>
              <td className="p-3">Mars 2025</td>
              <td className="p-3">Un portfolio en 3D avec des projets immersifs.</td>
            </tr>
            <tr>
              <td className="p-3">Lumières Interactives</td>
              <td className="p-3">Janvier 2024</td>
              <td className="p-3">Installation d'art numérique avec des effets lumineux interactifs.</td>
            </tr>
            <tr>
              <td className="p-3">Art Numérique</td>
              <td className="p-3">Décembre 2023</td>
              <td className="p-3">Une collection d'œuvres générées par IA.</td>
            </tr>
          </tbody>
        </table>
      </div>
    </Html>
  </mesh>
  <mesh castShadow receiveShadow />
</group>

<group
  rotation={[-Math.PI / 2, 0, Math.PI]}
  position={[-3, 4, 0]}
  scale={0.003}
>
  <mesh>
    <Html
      scale={100}
      rotation={[Math.PI / 2, 0, 0]}
      position={[0, 0, 0]}
      transform
      occlude
    >
      <div className="rounded-2xl bg-black/50 p-6 text-white shadow-2xl backdrop-blur-2xl">
        <h2 className="animate-fade-in mb-4 text-3xl font-semibold text-cyan-400">Choisissez un Projet</h2>
        <div className="space-y-4">
          <div className="flex items-center">
            <input type="radio" id="project1" name="project" value="project1" className="mr-2"/>
            <label htmlFor="project1" className="text-lg text-cyan-300">Portfolio Interactif</label>
          </div>
          <div className="flex items-center">
            <input type="radio" id="project2" name="project" value="project2" className="mr-2"/>
            <label htmlFor="project2" className="text-lg text-cyan-300">Lumières Interactives</label>
          </div>
          <div className="flex items-center">
            <input type="radio" id="project3" name="project" value="project3" className="mr-2"/>
            <label htmlFor="project3" className="text-lg text-cyan-300">Art Numérique</label>
          </div>
        </div>
      </div>
    </Html>
  </mesh>
  <mesh castShadow receiveShadow />
</group>
<group
  rotation={[-Math.PI / 2, 0, Math.PI]}
  position={[3, 4, 0]}
  scale={0.003}
>
  <mesh>
    <Html
      scale={100}
      rotation={[Math.PI / 2, 0, 0]}
      position={[0, 0, 0]}
      transform
      occlude
    >
      <div className="rounded-2xl bg-black/50 p-6 text-white shadow-2xl backdrop-blur-2xl">
        <h2 className="animate-fade-in mb-6 text-3xl font-bold text-cyan-400">Contactez-moi</h2>
        <form className="space-y-4">
          <div>
            <label htmlFor="name" className="block text-lg text-cyan-300">Votre nom</label>
            <input
              type="text"
              id="name"
              name="name"
              placeholder="Entrez votre nom"
              className="w-full p-3 rounded-lg text-black"
            />
          </div>
          <div>
            <label htmlFor="email" className="block text-lg text-cyan-300">Votre e-mail</label>
            <input
              type="email"
              id="email"
              name="email"
              placeholder="Entrez votre e-mail"
              className="w-full p-3 rounded-lg text-black"
            />
          </div>
          <div>
            <label htmlFor="message" className="block text-lg text-cyan-300">Votre message</label>
            <textarea
              id="message"
              name="message"
              rows={4}
              placeholder="Écrivez votre message"
              className="w-full p-3 rounded-lg text-black"
            ></textarea>
          </div>
          <div>
            <button
              type="submit"
              className="w-full py-3 px-6 bg-gradient-to-r from-cyan-500 to-blue-600 rounded-lg text-white font-semibold"
            >
              Envoyer
            </button>
          </div>
        </form>
      </div>
    </Html>
  </mesh>
  <mesh castShadow receiveShadow />
</group>
<group
  rotation={[-Math.PI / 2, 0, Math.PI]}
  position={[6, 4, 0]}
  scale={0.003}
>
  <mesh>
    <Html
      scale={100}
      rotation={[Math.PI / 2, 0, 0]}
      position={[0, 0, 0]}
      transform
      occlude
    >
      <div className="rounded-2xl bg-black/50 p-6 text-white shadow-2xl backdrop-blur-2xl">
        <h2 className="animate-fade-in mb-6 text-3xl font-bold text-cyan-400">Galerie d'Images</h2>
        <div className="relative">
          <div className="flex overflow-hidden">
            <img src="/images/project1.jpg" className="w-full transition-all duration-500" />
            <img src="/images/project2.jpg" className="w-full transition-all duration-500" />
            <img src="/images/project3.jpg" className="w-full transition-all duration-500" />
          </div>
          <div className="absolute top-1/2 left-0 transform -translate-y-1/2 text-white text-3xl">
            <button
              onClick={() => handleSlidePrev()}
              className="bg-gray-800 p-2 rounded-full"
            >
              &lt;
            </button>
          </div>
          <div className="absolute top-1/2 right-0 transform -translate-y-1/2 text-white text-3xl">
            <button
              onClick={() => handleSlideNext()}
              className="bg-gray-800 p-2 rounded-full"
            >
              &gt;
            </button>
          </div>
        </div>
      </div>
    </Html>
  </mesh>
  <mesh castShadow receiveShadow />
</group>

<group
  rotation={[-Math.PI / 2, 0, Math.PI]}
  position={[-3, 4, -3]}
  scale={0.003}
>
  <mesh>
    <Html
      scale={100}
      rotation={[Math.PI / 2, 0, 0]}
      position={[0, 0, 0]}
      transform
      occlude
    >
      <div className="rounded-2xl bg-black/50 p-6 text-white shadow-2xl backdrop-blur-2xl">
        <h2 className="animate-fade-in mb-6 text-3xl font-bold text-cyan-400">Statistiques de Projets</h2>
        <div className="space-y-4">
          <div>
            <p className="text-lg text-cyan-300">Projets réalisés</p>
            <h3 className="text-4xl font-bold text-white">25</h3>
          </div>
          <div>
            <p className="text-lg text-cyan-300">Satisfaits clients</p>
            <h3 className="text-4xl font-bold text-white">98%</h3>
          </div>
          <div>
            <p className="text-lg text-cyan-300">Projets en cours</p>
            <h3 className="text-4xl font-bold text-white">5</h3>
          </div>
        </div>
      </div>
    </Html>
  </mesh>
  <mesh castShadow receiveShadow />
</group>

<group
  rotation={[-Math.PI / 2, 0, Math.PI]}
  position={[-6, 4, 0]}
  scale={0.003}
>
  <mesh>
    <Html
      scale={100}
      rotation={[Math.PI / 2, 0, 0]}
      position={[0, 0, 0]}
      transform
      occlude
    >
      <div className="rounded-2xl bg-black/50 p-6 text-white shadow-2xl backdrop-blur-2xl">
        <h2 className="animate-fade-in mb-6 text-3xl font-bold text-cyan-400">Avis de Clients</h2>
        <div className="space-y-4">
          <div className="flex items-center space-x-2">
            <div className="flex">
              <span className="text-yellow-400">★★★★★</span>
            </div>
            <p className="text-lg text-cyan-300">5 étoiles</p>
          </div>
          <p className="text-lg text-cyan-200 opacity-80">
            "Un portfolio incroyable avec des projets à la pointe de la technologie. L'interactivité 3D est un vrai plus !"
          </p>
          <div className="flex items-center space-x-2">
            <div className="flex">
              <span className="text-yellow-400">★★★★☆</span>
            </div>
            <p className="text-lg text-cyan-300">4 étoiles</p>
          </div>
          <p className="text-lg text-cyan-200 opacity-80">
            "Très moderne et innovant, j'ai adoré l'expérience. Cependant, il pourrait y avoir un peu plus de contenu."
          </p>
        </div>
      </div>
    </Html>
  </mesh>
  <mesh castShadow receiveShadow />
</group>

<ParallaxSlider />

<Sidebar />

<TimelineProgress />

<BarChart />


    </>
  );
};

import { useState, useEffect, useRef } from 'react';
import { Chart } from "chart.js";

const ParallaxSlider = () => {
  const [offset, setOffset] = useState(0);

  const handleScroll = () => {
    setOffset(window.scrollY * 0.2); // Ajuste la vitesse du parallax
  };

  useEffect(() => {
    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  return (
    <group
      rotation={[-Math.PI / 2, 0, Math.PI]}
      position={[0, 4, 0]}
      scale={0.003}
    >
      <mesh>
        <Html
          scale={100}
          rotation={[Math.PI / 2, 0, 0]}
          position={[0, 0, 0]}
          transform
          occlude
        >
          <div className="relative rounded-2xl bg-black/50 p-6 text-white shadow-2xl backdrop-blur-2xl">
            <h2 className="animate-fade-in mb-6 text-3xl font-bold text-cyan-400">Galerie Parallax</h2>
            <div className="flex overflow-hidden">
              <div
                className="transition-all duration-500 ease-in-out"
                style={{
                  transform: `translateX(-${offset}px)`,
                }}
              >
                <img src="/images/project1.jpg" alt="Projet 1" className="w-full" />
                <img src="/images/project2.jpg" alt="Projet 2" className="w-full" />
                <img src="/images/project3.jpg" alt="Projet 3" className="w-full" />
              </div>
            </div>
          </div>
        </Html>
      </mesh>
    </group>
  );
};

const Sidebar = () => {
  const [open, setOpen] = useState(false);

  const toggleSidebar = () => {
    setOpen(!open);
  };

  return (
    <group
      rotation={[-Math.PI / 2, 0, Math.PI]}
      position={[-6, 4, 0]}
      scale={0.003}
    >
      <mesh>
        <Html
          scale={100}
          rotation={[Math.PI / 2, 0, 0]}
          position={[0, 0, 0]}
          transform
          occlude
        >
          <div className={`fixed top-0 left-0 h-full bg-black/80 text-white p-6 transform ${open ? 'translate-x-0' : '-translate-x-full'} transition-all duration-300 ease-in-out`}>
            <h2 className="text-2xl font-semibold text-cyan-400">Menu</h2>
            <ul className="space-y-4 mt-6">
              <li>
                <a href="#projets" className="text-lg text-cyan-300">Projets</a>
              </li>
              <li>
                <a href="#contact" className="text-lg text-cyan-300">Contact</a>
              </li>
              <li>
                <a href="#about" className="text-lg text-cyan-300">À propos</a>
              </li>
            </ul>
            <button onClick={toggleSidebar} className="absolute top-6 right-6 text-2xl">
              &times;
            </button>
          </div>
          <button onClick={toggleSidebar} className="fixed top-6 left-6 text-2xl text-cyan-400">
            ☰
          </button>
        </Html>
      </mesh>
    </group>
  );
};

const BarChart = () => {
  const chartRef = useRef<HTMLCanvasElement>(null);

  useEffect(() => {
    if (chartRef.current) {
      new Chart(chartRef.current, {
        type: 'bar',
        data: {
          labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May'],
          datasets: [
            {
              label: 'Projets réalisés',
              data: [65, 59, 80, 81, 56],
              backgroundColor: 'rgba(0, 255, 255, 0.6)',
              borderColor: 'rgba(0, 255, 255, 1)',
              borderWidth: 1,
            },
          ],
        },
        options: {
          responsive: true,
          scales: {
            y: {
              beginAtZero: true,
            },
          },
        },
      });
    }
  }, []);

  return (
    <group
      rotation={[-Math.PI / 2, 0, Math.PI]}
      position={[3, 4, 0]}
      scale={0.003}
    >
      <mesh>
        <Html
          scale={100}
          rotation={[Math.PI / 2, 0, 0]}
          position={[0, 0, 0]}
          transform
          occlude
        >
          <div className="rounded-2xl bg-black/50 p-6 text-white shadow-2xl backdrop-blur-2xl">
            <h2 className="animate-fade-in mb-6 text-3xl font-bold text-cyan-400">Statistiques de Projets</h2>
            <canvas ref={chartRef} className="w-full h-60" />
          </div>
        </Html>
      </mesh>
    </group>
  );
};

const TimelineProgress = () => {
  const [progress, setProgress] = useState(0);

  useEffect(() => {
    const interval = setInterval(() => {
      if (progress < 100) {
        setProgress(progress + 5);
      }
    }, 500);

    return () => clearInterval(interval);
  }, [progress]);

  return (
    <group
      rotation={[-Math.PI / 2, 0, Math.PI]}
      position={[0, 5, 0]}
      scale={0.003}
    >
      <mesh>
        <Html
          scale={100}
          rotation={[Math.PI / 2, 0, 0]}
          position={[0, 0, 0]}
          transform
          occlude
        >
          <div className="rounded-2xl bg-black/50 p-6 text-white shadow-2xl backdrop-blur-2xl">
            <h2 className="animate-fade-in mb-6 text-3xl font-bold text-cyan-400">Timeline du Projet</h2>
            <div className="space-y-4">
              <div className="flex justify-between">
                <span className="text-cyan-300">Début</span>
                <span className="text-cyan-300">Milestone</span>
                <span className="text-cyan-300">Fin</span>
              </div>
              <div className="relative w-full h-2 bg-gray-700 rounded-full">
                <div
                  style={{
                    width: `${progress}%`,
                  }}
                  className="h-full bg-cyan-500 rounded-full"
                />
              </div>
              <div className="text-white text-xl mt-4">{progress}%</div>
            </div>
          </div>
        </Html>
      </mesh>
    </group>
  );
};
